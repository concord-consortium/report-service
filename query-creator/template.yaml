AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  query-creator

Parameters:
  OutputBucket:
    Type: String
    Description: Output bucket for Athena queries
  LogInputBucket:
    Type: String
    Description: Input bucket for Learner Log Athena queries
  ReportServiceToken:
    Type: String
    Description: Bearer token for report service
  ReportServiceUrl:
    Type: String
    Description: URL for report service
  ResearcherReportsUrl:
    Type: String
    Description: URL for researcher reports app
    Default: https://localhost:8080
  FirebaseApp:
    Type: String
    Description: Firebase app name
  PortalReportUrl:
    Type: String
    Description: Url to the Portal Report where reseachers can load learner's models
  LogAthenaDBName:
    Type: String
    Description: The Athena Database Name

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    Environment:
      Variables:
        OUTPUT_BUCKET: !Ref OutputBucket
        REPORT_SERVICE_TOKEN: !Ref ReportServiceToken
        REPORT_SERVICE_URL: !Ref ReportServiceUrl
        RESEARCHER_REPORTS_URL: !Ref ResearcherReportsUrl
        FIREBASE_APP: !Ref FirebaseApp
        PORTAL_REPORT_URL: !Ref PortalReportUrl
        LOG_ATHENA_DB_NAME: !Ref LogAthenaDBName

Resources:
  CreateQueryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: create-query/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        CreateQuery:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /create-query
            Method: post
      Policies:
      - Statement:
        - Sid: QueryCreatorWorkgroupPolicy
          Effect: Allow
          Action:
          - athena:GetWorkGroup
          - athena:CreateWorkGroup
          - athena:StartQueryExecution
          - athena:TagResource
          Resource: '*'
      - Statement:
        - Sid: QueryCreatorS3OutputPolicy
          Effect: Allow
          Action:
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          - s3:PutObject
          - s3:PutObjectAcl
          Resource:
          - !Sub 'arn:${AWS::Partition}:s3:::${OutputBucket}'
          - !Sub 'arn:${AWS::Partition}:s3:::${OutputBucket}/*'
      - Statement:
        - Sid: QueryCreatorS3LogInputPolicy
          Effect: Allow
          Action:
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          Resource:
          - !Sub 'arn:${AWS::Partition}:s3:::${LogInputBucket}'
          - !Sub 'arn:${AWS::Partition}:s3:::${LogInputBucket}/*'
      - Statement:
        - Sid: QueryCreatorGluePolicy
          Effect: Allow
          Action:
          - glue:GetTable
          Resource:
          - '*'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateQueryApi:
    Description: "API Gateway endpoint URL for Prod stage for Create Query function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create-query/"
  CreateQueryFunction:
    Description: "Create Query Lambda Function ARN"
    Value: !GetAtt CreateQueryFunction.Arn
  CreateQueryFunctionIamRole:
    Description: "Implicit IAM Role created for Create Query function"
    Value: !GetAtt CreateQueryFunctionRole.Arn
